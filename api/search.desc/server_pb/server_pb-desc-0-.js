searchState.loadedDescShard("server_pb", 0, "Returns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nEncapsulates implementation details for a self-referencing …\nA struct for holding immutable references to all tail and …\nA struct for holding mutable references to all tail fields …\nA struct which contains only the head fields of …\nThe self-referencing struct.\nA more verbose but stable way to construct …\nA more verbose but stable way to construct …\nA more verbose but stable way to construct …\nA more verbose but stable way to construct …\nA more verbose but stable way to construct …\nA more verbose but stable way to construct …\nProvides an immutable reference to <code>decoders</code>. This method …\nProvides limited immutable access to <code>table</code>. This method …\nCalls <code>RobotLoggersBadBox::new()</code> using the provided values. …\nCalls <code>RobotLoggersBadBox::new()</code> using the provided values. …\nCalls <code>RobotLoggersBadBox::new()</code> using the provided values. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThis function drops all internally referencing fields and …\nConstructs a new instance of this self-referential struct. …\nConstructs a new instance of this self-referential struct. …\nConstructs a new instance of this self-referential struct. …\nCalls <code>RobotLoggersBadBox::try_new()</code> using the provided …\nCalls <code>RobotLoggersBadBox::try_new()</code> using the provided …\nCalls <code>RobotLoggersBadBox::try_new()</code> using the provided …\nCalls <code>RobotLoggersBadBox::try_new_or_recover()</code> using the …\nCalls <code>RobotLoggersBadBox::try_new_or_recover()</code> using the …\nCalls <code>RobotLoggersBadBox::try_new_or_recover()</code> using the …\n(See also <code>RobotLoggersBadBoxTryBuilder::try_build()</code>.) Like …\n(See also <code>RobotLoggersBadBoxAsyncTryBuilder::try_build()</code>.) …\n(See also …\n(See also …\n(See also …\n(See also …\nThis method provides immutable references to all tail and …\nProvides an immutable reference to <code>decoders</code>. This method …\nProvides a mutable reference to <code>decoders</code>. This method was …\nThis method provides mutable references to all tail fields.\nProvides limited immutable access to <code>table</code>. This method …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRetry operations if necessary; should be called frequently\nPass all incoming messages through this function; most …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")